openapi: '3.1.0'
info:
  version: '1.0.0'
  title: 'Sample API'
  description: Buy or rent spacecrafts

paths:
  /projects:
    get:
      summary: Returns an index with all projects
      responses:
        200:
          description: A full list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        404:
          description: No project found for the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a project with the given params
      responses:
        201:
          description: The project created, corresponding to the provided params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        404:
          description: No project found for the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{projectSlug}:
    parameters:
      - name: projectSlug
        description: The unique identifier of the project
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Read a project
      responses:
        200:
          description: The project corresponding to the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        404:
          description: No project found for the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a project
      responses:
        200:
          description: The project corresponding to the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        404:
          description: No project found for the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Read a project
      responses:
        200:
          description: The project corresponding to the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        404:
          description: No project found for the provided `projectSlug`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    projectSlug:
      description: The unique identifier of a project
      type: string
    Project:
      type: object
      required:
        - id
        - title
      properties:
        title:
          type: string
        slug:
          type: string
        technical_info:
            type: string
        description:
          type: string
        team:
          type: string
        download:
          type: string
        additional_info:
          type: string
        buy_link:
          type: string
        created_at:
          type: timestamp
        updated_at:
         type: timestamp
        uuid:
          type: uuid
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: Authorization
security:
  - ApiKey: []